buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'org.jetbrains.intellij.plugins:gradle-intellij-plugin:1.12.0'
    }
}

allprojects {
    apply plugin: 'base'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'

    version = '1.5.0'.with {
        def r = project.properties['RELEASE']
        if ( r == null) {
            return "$it-SNAPSHOT"
        } else if (r != it) {
            throw new GradleException("RELEASE mismatch: RELEASE='$r', expected '$it'")
        } else {
            return it
        }
    }
    println "$project.path $version"
    group = 'net.netconomy.tools.restflow'

    repositories {mavenCentral()}

    buildDir = 'target'

    archivesBaseName = buildArtifactBaseName(project)
    idea.module {
        name = archivesBaseName
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'groovy'
    //noinspection UnnecessaryQualifiedReference
    apply plugin: local.DependencySets

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(8)
        }
    }

    ext.enableMavenPublishing = true

    dependencySets {
        groovy '3.0.14', 'org.codehaus.groovy',
               'groovy', 'groovy-datetime', 'groovy-nio', 'groovy-templates', 'groovy-xml', 'groovy-json', 'groovy-swing'
        // uncomment for Groovy 4 (just to check that things work):
        //groovy '4.0.8', 'org.apache.groovy',
        //       'groovy', 'groovy-datetime', 'groovy-nio', 'groovy-templates', 'groovy-xml', 'groovy-json', 'groovy-swing'
        spock '1.3-groovy-2.5', 'org.spockframework',
              [name: 'spock-core', configure: {exclude group: 'org.codehaus.groovy'}],
              [group: 'cglib', name: 'cglib-nodep', version: '3.2.10'],
              groovy
    }

    //noinspection GroovyAssignabilityCheck
    task sourceJar(type: Jar, group: 'build') {
        archiveClassifier.set 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourceJar
    }

    ext.additionalPublications = [sourceJar]
}

def buildArtifactBaseName(Project prj) {
    if (prj == rootProject) {
        return 'restflow'
    } else {
        return buildArtifactBaseName(prj.parent) + '-' + prj.name
    }
}
